using System; using System.Collections.Generic;
using System.ComponentModel; using System.Linq;
using System.Text;
using System.Threading.Tasks; using FacebookClientSample.Models;
using Newtonsoft.Json.Linq;
using Plugin.FacebookClient; using Plugin.FacebookClient.Abstractions; using Xamarin.Forms;  namespace FacebookClientSample.ViewModels {

    public class ProfileDataViewModel : INotifyPropertyChanged     {         public List<PostData>                        ListPostedMessages        { get; set; }         public FaceBookData                          Profile                   { get; set; }         public Command                               FillPrincipalDataCommand  { get; set; }         public Command<string>                       PostMessageCommand        { get; set; }         public string                                MessagePost               { get; set; } = string.Empty;         FacebookResponse<string> attrs;          string                                       Message = string.Empty;         string                                       Story = string.Empty;          public ProfileDataViewModel()         {             Profile = new FaceBookData();             FillPrincipalDataCommand = new Command(FillPrincipalData);             PostMessageCommand       = new Command<string>(PostMessage);          }          public async void FillPrincipalData()         {             FacebookResponse<bool> resp = await CrossFacebookClient.Current.LoginAsync(new string[] { "email", "public_profile", "user_friends" });             attrs = await CrossFacebookClient.Current.RequestUserDataAsync             (                    new string[] { "id", "name", "picture", "cover", "friends" }, new string[] { }             ); 
             var jo = JObject.Parse(attrs.Data);                 Profile = new FaceBookData() {                              FullName = jo["name"].ToString(),                             Cover    = new UriImageSource { Uri = new System.Uri(jo["cover"]["source"].ToString()) },                             Picture  = new UriImageSource { Uri = new System.Uri(jo["picture"]["data"]["url"].ToString()) }              };              await ShowPosts();             await App.Navigation.PushAsync(new MyProfilePage(Profile, ListPostedMessages));         }          public async void PostMessage(string message)         {             await CrossFacebookClient.Current.PostDataAsync("me/feed",                                                            new string[] { "publish_actions" },                                                               new Dictionary<string, string>()                                                                 {                                                                    {"message" ,message}                                                                }                                                             );             MessagePost = string.Empty;             await ShowPosts();         }          public async Task ShowPosts()         {                 FacebookResponse<string> post = await CrossFacebookClient.Current.QueryDataAsync("me/feed", new string[] { "user_posts" });                var jo = JObject.Parse(post.Data);                              ListPostedMessages = new List<PostData>();                   if (jo.ContainsKey("data"))                 {                     var array = ((JArray)jo["data"]);                     foreach (var item in array)                     {                         var postData = new PostData();                          if (!string.IsNullOrEmpty($"{item["message"]}"))                         {                             postData.MessagePosted = $"{item["message"]}";                         }                          if (!string.IsNullOrEmpty($"{item["story"]}"))                         {                             postData.Story = $"{item["story"]}";                         }                          ListPostedMessages.Add(postData);                     }                  }          }          public event PropertyChangedEventHandler PropertyChanged;     } } 